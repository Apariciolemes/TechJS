{
    "courses": [
        {
            "level": "Fácil",
            "contentLevel": [
                {
                    "title": "1-) Questão nível Fácil",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 0
                },
                {
                    "title": "2-) Questão nível Fácil",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 1
                },
                {
                    "title": "3-) Questão nível Fácil",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 2
                }
            ]
        },
        {
            "level": "Médio",
            "contentLevel": [
                {
                    "title": "1-) Questão nível Médio ",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 0
                },
                {
                    "title": "2-) Questão nível Médio",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 1
                },
                {
                    "title": "3-) Questão nível Médio ",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:",
                    "sequency": 2
                }
            ]
        },
        {
            "level": "Avançado",
            "contentLevel": [
                {
                    "title": "1-) Questão nível Avançado",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:"
                },
                {
                    "title": "2-) Questão nível Avançado",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:"
                },
                {
                    "title": "3-) Questão nível Avançado",
                    "description": "Na maioria das linguagens de programação, o escopo das variáveis locais é vinculado ao bloco onde elas são declaradas. Sendo assim, elas “morrem” ao final da instrução em que estão sendo executadas. Será que isso se aplica também à linguagem JavaScript? Vamos verificar:"
                }
            ]
        }
    ]
}